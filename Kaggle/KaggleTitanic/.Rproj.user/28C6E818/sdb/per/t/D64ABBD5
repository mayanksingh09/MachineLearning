{
    "contents" : "library(randomForest)\nlibrary(dplyr)\nlibrary(rpart)\nlibrary(rpart.plot)\nlibrary(party)\ntrain<-read.csv(\"train.csv\")\ntest<-read.csv(\"test.csv\")\nshuffle<-train[sample(nrow(train)),]\n\nall<-bind_rows(shuffle,test)\nall$Embarked[c(62,830)]<-\"C\"\nall$Embarked<-as.factor(all$Embarked)\nall$Fare[1044]<-median(all[all$Pclass=='3' & all$Embarked=='S',]$Fare,na.rm = TRUE)\nall$title<-gsub(\".*\\\\ (.*)\\\\..*\",\"\\\\1\",all$Name)\n#if(FALSE){\n  all$title[all$title == 'L'] <- 'Other'\n  all$title[all$title == 'Capt'] <- 'Other'\n  all$title[all$title == 'Countess'] <- 'Other'\n  all$title[all$title == 'Don'] <- 'Other'\n  all$title[all$title == 'Dona'] <- 'Other'\n  all$title[all$title == 'Mme'] <- 'Other'\n  all$title[all$title == 'Major'] <- 'Other'\n  all$title[all$title == 'Jonkheer'] <- 'Other'\n  \n  rare_title <- c('Dona', 'Lady', 'the Countess','Capt', 'Col', 'Don', \n                  'Dr', 'Major', 'Rev', 'Sir', 'Jonkheer')\n  \n  # Also reassign mlle, ms, and mme accordingly\n  all$title[all$title == 'Mlle']        <- 'Miss' \n  all$title[all$title == 'Ms']          <- 'Miss'\n  all$title[all$title == 'Mme']         <- 'Mrs' \n  all$title[all$title %in% rare_title]  <- 'Rare title'\n#}\nall$title<-as.factor(all$title)\nall$family_size<-all$Parch + all$SibSp + 1\nall$fare_per_person<-all$Fare/all$family_size\nall$Surname<-sapply(all$Name,FUN=function(x){strsplit(x,split = '[,.]')[[1]][1]})\nall$familyID <- paste(as.character(all$family_size), all$surname, sep=\"\")\nall$familyID[all$family_size < 2] <- 'Small'\nfamIDs <- data.frame(table(all$familyID))\nfamIDs <- famIDs[famIDs$Freq < 2,]\nall$familyID[all$familyID %in% famIDs$Var1] <- 'Small'\nlength(unique(all$familyID))\nall$familyID <- factor(all$familyID)\n\n\npredicted_age <- cforest(Age ~ Pclass + Sex + SibSp + Parch + Fare + Embarked + title + family_size + fare_per_person + familyID,\n                         data = all[!is.na(all$Age),],\n                         controls=cforest_unbiased(ntree=200, mtry=3))\n\nall$Age[is.na(all$Age)] <- predict(predicted_age, all[is.na(all$Age),], OOB=TRUE, type = \"response\")\nall$Child[all$Age < 18] <- 'Child'\nall$Child[all$Age >= 18] <- 'Adult'\nall$Child <- factor(all$Child)\nall$Mother <- 'Not Mother'\nall$Mother[all$Sex == 'female' & all$Parch > 0 & all$Age > 18 & all$title != 'Miss'] <- \"Mother\"\nall$Mother <- factor(all$Mother)\nall$Deck<-substring(all$Cabin, 1, 1)\nall$Deck <- factor(all$Deck)\n\n\npredicted_deck <- cforest(Deck ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title + Child + Mother + family_size + fare_per_person + familyID,\n                          data = all[all$Deck != '',],\n                          controls=cforest_unbiased(ntree=200, mtry=3))\n\nall$Deck[all$Deck == ''] <- predict(predicted_deck, all[all$Deck == '',], OOB=TRUE, type = \"response\")\nstr(all)\ntrain <- all[1:891,]\ntest <- all[892:1309,]\n\nmy_forest <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title \n                     + Deck + Child + Mother + family_size + fare_per_person + familyID, data = train,\n                     controls=cforest_unbiased(ntree=500, mtry=3))\n\nmy_prediction <- predict(my_forest, test, OOB=TRUE, type = \"response\")\n# Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions\nmy_solution <- data.frame(PassengerId = test[\"PassengerId\"], Survived = my_prediction)\n\nwrite.csv(my_solution, file=\"cforest1.csv\",  row.names = FALSE)\n#result-0.80/0.79\n\n\nmy_forest <- cforest(as.factor(Survived) ~ Pclass + Sex + Age + family_size , data = train,\n                     controls=cforest_unbiased(ntree=500, mtry=3))\n\nmy_prediction <- predict(my_forest, test, OOB=TRUE, type = \"response\")\n# Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions\nmy_solution <- data.frame(PassengerId = test[\"PassengerId\"], Survived = my_prediction)\n\nwrite.csv(my_solution, file=\"cforest2.csv\",  row.names = FALSE)\n#result-0.76\n\n\n\n#if(FALSE){\n  clusterdata <- all[, c('Pclass', 'Age', 'SibSp', 'Parch', 'Fare')]\n  clusterdata$Sex <- as.numeric(all$Sex)\n  #wss <- (nrow(clusterdata)-1)*sum(apply(clusterdata,2,var))\n  #  for (i in 2:15) wss[i] <- sum(kmeans(clusterdata, centers=i)$withinss)\n  #plot(1:15, wss, type=\"b\", xlab=\"Number of Clusters\",\n  #     ylab=\"Within groups sum of squares\")\n  error <- vector()\n  error[1] <- my_forest$err.rate[2000, c('OOB')]\n  for(i in 2:15){\n    cluster <- kmeans(clusterdata, i)\n    all$Cluster <- as.factor(cluster$cluster)\n    \n    train <- all[1:891,]\n    test <- all[892:1309,]\n    \n    my_forest <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title + Deck + Child + Mother + Cluster + family_size, data=train, importance = TRUE, ntree=2000)\n    error[i] <- my_forest$err.rate[2000, c('OOB')]\n  }\n  plot(error, type=\"b\")\n  cluster <- kmeans(clusterdata, 8)\n  all$Cluster <- as.factor(cluster$cluster)\n  \n  train <- all[1:891,]\n  test <- all[892:1309,]\n  \n  my_forest <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title + Deck + Child + Mother + Cluster + family_size, data=train, importance = TRUE, ntree=4000)\n#}\n\n  my_prediction <- predict(my_forest, test, OOB=TRUE, type = \"response\")\n  # Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions\n  my_solution <- data.frame(PassengerId = test[\"PassengerId\"], Survived = my_prediction)\n  \n  write.csv(my_solution, file=\"Rforest1.csv\",  row.names = FALSE)\n  #result-0.80-ntree-2000\n  #0.77-500\n  #0.76-1500\n\n\n  my_forest <- randomForest(as.factor(Survived) ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked + title \n                            + Deck + Child + Mother + family_size + fare_per_person + familyID + Cluster, data=train, importance = TRUE, ntree=4000)\n  #}\n  \n  my_prediction <- predict(my_forest, test, OOB=TRUE, type = \"response\")\n  # Create a data frame with two columns: PassengerId & Survived. Survived contains your predictions\n  my_solution <- data.frame(PassengerId = test[\"PassengerId\"], Survived = my_prediction)\n  \n  write.csv(my_solution, file=\"Rforest1.csv\",  row.names = FALSE)\n  ",
    "created" : 1468236154463.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2299423950",
    "id" : "D64ABBD5",
    "lastKnownWriteTime" : 1468581842,
    "path" : "~/Documents/Titanic/TitanicRF2.R",
    "project_path" : "TitanicRF2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}