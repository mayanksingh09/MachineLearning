{
    "contents" : "#KAGGLE COMPETITION - GETTING STARTED\n\n# This script file is intended to help you get started on the Kaggle platform, and to show you how to make a submission to the competition.\n\n\n# Let's start by reading the data into R\n# Make sure you have downloaded these files from the Kaggle website, and have navigated to the directory where you saved the files on your computer\n\ntrain = read.csv(\"train2016.csv\")\n\ntest = read.csv(\"test2016.csv\")\n\n# We will just create a simple logistic regression model, to predict Party using all other variables in the dataset, except for the user ID:\n\nSimpleMod = glm(Party ~ . -USER_ID, data=train, family=binomial)\nsummary(SimpleMod)\n# And then make predictions on the test set:\n\nPredTest = predict(SimpleMod, newdata=test, type=\"response\")\n\nthreshold = 0.5\n\nPredTestLabels = as.factor(ifelse(PredTest<threshold, \"Democrat\", \"Republican\"))\ntable(PredTestLabels)/nrow(test)\n\n# baseline accuracy\ntable(train$Party)/nrow(train)\n\n#YOB + Incomeover $150,000 + HouseholdStatusDomestic Partners (no kids) + Q121699No + Q121699Yes + Q121700No + Q120194Study first + Q118232Idealist + Q116197A.M. + Q115611Yes + Q114517No + Q113181Yes + Q113181No + Q112270No + Q109244No + Q108950Risk-friendly + Q109244Yes + Q101596No + Q101596Yes + Q100689Yes + Q98869No + Q98578No\n###### Model 1 ########\nstr(train)\nsummary(train)\nLog_Mod1 = glm(Party ~ YOB + HouseholdStatus + Q121699 + Q121699 + Q121700 + Q120194 + Q118232 + Q116197 + Q115611 + Q114517 + Q113181 + Q113181 + Q112270 + Q109244 + Q108950 + Q109244 + Q101596 + Q101596 + Q100689 + Q98869 + Q98578 - USER_ID, data=train, family=binomial)\nsummary(Log_Mod1)\n\nPredTest1 = predict(Log_Mod1, newdata=test, type=\"response\")\nthreshold = 0.5\n\nPredTestLabels1 = as.factor(ifelse(PredTest1<threshold, \"Democrat\", \"Republican\"))\ntable(PredTestLabels1)/nrow(test)\n\n####### Model 2(Cart) ########\nlibrary(caTools)\nspl <- sample.split(train_o$Party, SplitRatio = 0.7)\nPartyTrain <- subset(train_o, spl == TRUE)\nPartyTest <- subset(train_o, spl == FALSE)\n\nsummary(PartyTrain)\n\nlibrary(rpart)\nlibrary(rpart.plot)\n#CARTmodel1 = rpart(Party ~ . -USER_ID, data=PartyTrain)\n#prp(CARTmodel1)\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel , data=PartyTrain)\nprp(CARTmodel1)\n\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(49+64)/nrow(PartyTest)\n\nPredictCART <- predict(CARTmodel1, newdata = test, type=\"class\")\ntable(PredictCART)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredictCART)\nwrite.csv(MySubmission, \"SubmissionCART.csv\", row.names=FALSE)\n############### Imputation ######################\nlibrary(mice)\n\nimputed <- complete(mice(train))\nsummary(imputed)\n\nlibrary(caTools)\nspl <- sample.split(imputed$Party, SplitRatio = 0.7)\nPartyTrainI <- subset(imputed, spl == TRUE)\nPartyTestI <- subset(imputed, spl == FALSE)\n\nsummary(PartyTrain)\n\nlibrary(rpart)\nlibrary(rpart.plot)\nICARTmodel1 = rpart(Party ~ . -USER_ID, data=PartyTrainI)\nprp(ICARTmodel1)\n\nIPredict1 <- predict(ICARTmodel1, newdata = PartyTestI, type=\"class\")\ntable(PartyTestI$Party, IPredict1)\n(655+358)/nrow(PartyTestI)\n\n\n\nIPredictCART <- predict(ICARTmodel1, newdata = test, type=\"class\")\ntable(IPredictCART)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = IPredictCART)\nwrite.csv(MySubmission, \"ISubmissionCART.csv\", row.names=FALSE)\n\n\nimputed_test <- complete(mice(test))\nnrow(imputed_test)\nIPredictCART <- predict(ICARTmodel1, newdata = imputed_test, type=\"class\")\ntable(IPredictCART)\nMySubmission = data.frame(USER_ID = imputed_test$USER_ID, Predictions = IPredictCART)\nwrite.csv(MySubmission, \"ISubmissionCARTI.csv\", row.names=FALSE)\n\n################33 glm with imputation\n\nSimpleMod1 = glm(Party ~ . -USER_ID, data=imputed, family=binomial)\nsummary(SimpleMod)\n# And then make predictions on the test set:\n\nPredTest = predict(SimpleMod1, newdata=test, type=\"response\")\n\nthreshold = 0.5\n\nPredTestLabels = as.factor(ifelse(PredTest<threshold, \"Democrat\", \"Republican\"))\ntable(PredTestLabels)/nrow(test)\n\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredTestLabels)\n\nwrite.csv(MySubmission, \"SubmissionSimpleLog2.csv\", row.names=FALSE)\n####### Random Forest ##################\n\nsummary(train)\nlibrary(caTools)\nspl <- sample.split(train$Party, SplitRatio = 0.7)\nRF_PartyTrain <- subset(train, spl == TRUE)\nRF_PartyTest <- subset(train, spl == FALSE)\n\nsummary(PartyTrain)\nlibrary(randomForest)\nRF_model = randomForest(Party ~ ., data=RF_PartyTrain)\nprp(RF_model)\n\nPredict1 <- predict(RF_model, newdata = RF_PartyTest, type=\"class\")\ntable(RF_PartyTest$Party, Predict1)\n(591+405)/nrow(RF_PartyTest) #0.6343\n\nPredict1 <- predict(RF_model, newdata = test, type=\"class\")\ntable(Predict1)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = Predict1)\n#threshold = 0.5\n#Predict1\n#PredTestLabels = as.factor(ifelse(Predict1<threshold, \"Democrat\", \"Republican\"))\nRF_Model <- write.csv(MySubmission, \"SubmissionRF.csv\", row.names=FALSE)\n\n############### RF with imputation ###############\nummary(train)\nlibrary(caTools)\nspl <- sample.split(imputed$Party, SplitRatio = 0.7)\nRF_PartyTrain <- subset(imputed, spl == TRUE)\nRF_PartyTest <- subset(imputed, spl == FALSE)\n\n\nlibrary(randomForest)\nRF_model = randomForest(Party ~ ., data=RF_PartyTrain)\nprp(RF_model)\n\nPredict1 <- predict(RF_model, newdata = RF_PartyTest, type=\"class\")\ntable(RF_PartyTest$Party, Predict1)\n\n\nPredict1 <- predict(RF_model, newdata = test, type=\"class\")\ntable(Predict1)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = Predict1)\n#threshold = 0.5\n#Predict1\n#PredTestLabels = as.factor(ifelse(Predict1<threshold, \"Democrat\", \"Republican\"))\nRF_Model <- write.csv(MySubmission, \"SubmissionRFI.csv\", row.names=FALSE)\n\n\n\n\n############3 cleaning YOB ###############\nc <- subset(b, b$YOB <= 2003) \n \ntrain_oc <- c\n\nspl <- sample.split(train_oc$Party, SplitRatio = 0.7)\nC_PartyTrain <- subset(train_oc, spl == TRUE)\nC_PartyTest <- subset(train_oc, spl == FALSE)\n\nlibrary(rpart)\nlibrary(rpart.plot)\nCARTmodel2 = rpart(Party ~ . -USER_ID, data=C_PartyTrain)\nprp(CARTmodel2)\n\nPredict2 <- predict(CARTmodel2, newdata = C_PartyTest, type=\"class\")\ntable(C_PartyTest$Party, Predict2)\n(648+339)/nrow(C_PartyTest)\nPredictCART2 <- predict(CARTmodel2, newdata = test, type=\"class\")\ntable(PredictCART2)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredictCART2)\nwrite.csv(MySubmission, \"SubmissionCART2.csv\", row.names=FALSE)\n\n################################################ RF Again ########################################3\nspl <- sample.split(train_oc$Party, SplitRatio = 0.7)\nRF_PartyTrain <- subset(train_oc, spl == TRUE)\nRF_PartyTest <- subset(train_oc, spl == FALSE)\n\nlibrary(randomForest)\nRF_model1 = randomForest(Party ~ . -USER_ID, data=RF_PartyTrain)\n\nPredict_RF <- predict(RF_model1, newdata = RF_PartyTest, type=\"class\")\ntable(RF_PartyTest$Party, Predict_RF)\n(590+420)/nrow(RF_PartyTest) #0.6433121\n\nPredict <- predict(RF_model1, newdata = test, type=\"class\")\ntable(Predict1)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = Predict)\nwrite.csv(MySubmission, \"SubmissionRF2.csv\", row.names=FALSE)\n\n#######################################################\n\n\n\n# However, you can submit the file on Kaggle to see how well the model performs. You can make up to 5 submissions per day, so don't hesitate to just upload a solution to see how you did.\n\n# Let's prepare a submission file for Kaggle (for more about this, see the \"Evaluation\" page on the competition site):\n\nMySubmission = data.frame(USER_ID = test$USER_ID, PREDICTION = PredTestLabels)\n\nwrite.csv(MySubmission, \"SubmissionSimpleLog.csv\", row.names=FALSE)\n\n# You should upload the submission \"SubmissionSimpleLog.csv\" on the Kaggle website to use this as a submission to the competition\n\n# This model was just designed to help you get started - to do well in the competition, you will need to build better models!",
    "created" : 1465382926830.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "435224097",
    "id" : "1E164EDD",
    "lastKnownWriteTime" : 1465391289,
    "path" : "~/Documents/KaggleAnalytisEdge/Kaggle.r",
    "project_path" : "Kaggle.r",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}