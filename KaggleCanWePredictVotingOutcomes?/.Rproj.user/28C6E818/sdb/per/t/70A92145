{
    "contents" : "test<-read.csv(\"test2016.csv\")\ntest<-read.csv(\"test2016.csv\",na.strings = c(\"\",\"NA\"))\ntrain<-read.csv(\"train2016.csv\",na.strings = c(\"\",\"NA\"))\ntrain<-read.csv(\"train2016.csv\")\ntrain_o<-na.omit(train)\nlibrary(rpart)\nlibrary(rpart.plot)\n#CARTmodel1 = rpart(Party ~ . -USER_ID, data=PartyTrain)\n#prp(CARTmodel1)\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel  , data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(49+64)/nrow(PartyTest)\n#0.53\n#2 - without gender\nCARTmodel1 = rpart(Party ~ YOB + Income + HouseholdStatus + EducationLevel , data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(59+50)/nrow(PartyTest)\n#0.51\n\n#3 - Logistic Model\n# baseline accuracy\ntable(train$Party)/nrow(train)\n\nstr(train)\nsummary(train)\nLog_Mod1 = glm(Party ~ YOB + HouseholdStatus + Q121699 + Q121699 + Q121700 + Q120194 + Q118232 + Q116197 + Q115611 + Q114517 + Q113181 + Q113181 + Q112270 + Q109244 + Q108950 + Q109244 + Q101596 + Q101596 + Q100689 + Q98869 + Q98578 - USER_ID, data=train, family=binomial)\nsummary(Log_Mod1)\n\nPredTest1 = predict(Log_Mod1, newdata=test, type=\"response\")\nthreshold = 0.5\n\nPredTestLabels1 = as.factor(ifelse(PredTest1<threshold, \"Democrat\", \"Republican\"))\ntable(PredTestLabels1)/nrow(test)\n\n#4- with some imp questions\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244, data=PartyTrain_o,minbucket= 25)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest_o, type=\"class\")\ntable(PartyTest_o$Party, Predict1)\n(80+56)/nrow(PartyTest_o)\n#0.64 on omitted data set and 0.62 on actual data set\n#depends on how data is splitted for 1000 seed te value is 0.66 while for 3000 it is 0.56\n#100 - 0.65\nlibrary(ROCR)\npredictRoc<-predict(CARTmodel1,newdata = PartyTest_o)\npredictRoc\npred<-prediction(predictRoc[,2],PartyTest_o$Party)\nperf<-performance(pred,\"tpr\",\"fpr\")\nplot(perf)\nas.numeric(performance(pred,\"auc\")@y.values)\n\n\n\n#random forest\nset.seed(1200)\nlibrary(randomForest)\nRF_model = randomForest(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=PartyTrain_o,nodesize=25,ntree=200)\nPredict1 <- predict(RF_model, newdata = PartyTest_o, type=\"class\")\ntable(PartyTest_o$Party, Predict1)\n(50+77)/nrow(PartyTest_o) \n\n\n#splitting actual data\nlibrary(caTools)\nspl <- sample.split(train$Party, SplitRatio = 0.7)\nPartyTrain <- subset(train, spl == TRUE)\nPartyTest <- subset(train, spl == FALSE)\n\n#glm with everything\nstr(train)\nsummary(train)\nLog_Mod1 = glm(Party ~ .- USER_ID, data=PartyTrain, family=binomial)\nsummary(Log_Mod1)\n\nPredTest1 = predict(Log_Mod1, newdata=PartyTest, type=\"response\")\nthreshold = 0.5\n\nPredTestLabels1 = as.factor(ifelse(PredTest1<threshold, \"Democrat\", \"Republican\"))\ntable(PredTestLabels1)/nrow(test)\n\n\n#cart with some more questions\n\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244 + Q122769 + Q120650 + Q118237 + Q117186 + Q116797 + Q116601 + Q116441 + Q115390 + Q115195 + Q112512 + Q111220 + Q109367 + Q109244 + Q108617 + Q107491 + Q106997 + Q106272 + Q105840 + Q102089 + Q101162 + Q101163 + Q101596  , data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(633+405)/nrow(PartyTest)\n\n#0.62 on actual set without omittion\n\n#data with omition\nset.seed(800)\nspl <- sample.split(train_o$Party, SplitRatio = 0.7)\nPartyTrain_o <- subset(train_o, spl == TRUE)\nPartyTest_o <- subset(train_o, spl == FALSE)\n\n\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244 + Q122769 + Q120650 + Q118237 + Q116441 + Q109244 + Q107491 + Q105840 + Q102089   , data=PartyTrain_o)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest_o, type=\"class\")\ntable(PartyTest_o$Party, Predict1)\n(56+71)/nrow(PartyTest_o)\n#0.60\n\n#Imputing data\ntrain<-read.csv(\"train2016.csv\",na.strings = c(\"\",\"NA\"))\ntest<-read.csv(\"test2016.csv\",na.strings = c(\"\",\"NA\"))\ntrain <- subset(train, train$YOB <= 2003) \n#remove party column from training data set\ntrain<-train[,!(names(train) %in% \"Party\")]\nimputeData<-NULL\n#merge test and training data to create a new dataset\nimputeData<-merge(test,train,all.x =  TRUE,all.y = TRUE)\n\nlibrary(mice)\nimpute<-NULL\nimpute<-complete(mice(imputeData))\ntestUserId<-test$USER_ID\ntrainUserId<-train$USER_ID\nimputeTest<-subset(impute,impute$USER_ID==testUserId)\n\nfor(i in 1:NROW(testUserId))\n{\n  imputeTest[i,]<-impute[impute$USER_ID==testUserId[i],]\n}\n\nimputeTrain<-subset(impute,impute$USER_ID==trainUserId)\n\nfor(i in 1:NROW(trainUserId))\n{\n  imputeTrain[i,]<-impute[impute$USER_ID==trainUserId[i],]\n}\n\n\ntrainComp<-read.csv(\"train2016.csv\",na.strings = c(\"\",\"NA\"))\n\ntrainComp <- subset(trainComp, trainComp$YOB <= 2003) \nimputeTrain$Party<-trainComp$Party\nlibrary(rpart)\nlibrary(rpart.plot)\n\nlibrary(caTools)\nspl <- sample.split(imputeTrain$Party, SplitRatio = 0.7)\nPartyTrain <- subset(imputeTrain, spl == TRUE)\nPartyTest <- subset(imputeTrain, spl == FALSE)\n\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=PartyTrain,cp=0.03)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(568+446)/nrow(PartyTest) #0.645\n\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=imputeTrain)\nPredictCART <- predict(CARTmodel1, newdata = imputeTest, type=\"class\")\ntable(PredictCART)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredictCART)\nwrite.csv(MySubmission, \"SubmissionCARTWithImputations.csv\", row.names=FALSE)\n\n\nCARTmodel1 = rpart(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel, data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(656+233)/nrow(PartyTest) #0.566\n\n\nCARTmodel1 = rpart(Party ~ . -USER_ID, data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(569+437)/nrow(PartyTest) #0.640\n\n#random forest\nset.seed(1200)\nlibrary(randomForest)\nRF_model = randomForest(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=PartyTrain,nodesize=25,ntree=200)\nPredict1 <- predict(RF_model, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(583+425)/nrow(PartyTest) \n\nRF_model = randomForest(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=imputeTrain,nodesize=25,ntree=200)\nPredictCART <- predict(RF_model, newdata = imputeTest, type=\"class\")\ntable(PredictCART)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredictCART)\nwrite.csv(MySubmission, \"SubmissionRFWithImputations.csv\", row.names=FALSE)\n#second submission with RF gives 0.6128\n\nset.seed(3000)\nlibrary(randomForest)\nRF_model = randomForest(Party ~ YOB + Gender + Income + HouseholdStatus + EducationLevel + Q118232 + Q115611 + Q113181 + Q109244  , data=PartyTrain,nodesize=200,ntree=1000)\nPredict1 <- predict(RF_model, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(589+431)/nrow(PartyTest) \nimputeCompleteCopy<-impute\n\n\n#########################################################################################\n#imputing data without queston variables\ntrain<-read.csv(\"train2016.csv\",na.strings = c(\"\",\"NA\"),stringsAsFactors = FALSE)\ntest<-read.csv(\"test2016.csv\",na.strings = c(\"\",\"NA\"),stringsAsFactors = FALSE)\ntrain <- subset(train, train$YOB <= 2003) \n#remove party column from training data set\ntrain<-train[,!(names(train) %in% \"Party\")]\nimputeData<-NULL\n#merge test and training data to create a new dataset\nimputeData<-merge(test,train,all.x =  TRUE,all.y = TRUE)\nimputeData<-imputeData[1:6]\n\nlibrary(mice)\nimputeNew<-NULL\nimputeNew<-complete(mice(imputeData))\nimputeNewCopy<-imputeNew\nimputeNew[7:107]<-imputeData[7:107]\nfor(i in 3:107)\n{\n  imputeNew[i]<-as.factor(imputeNew[[i]])\n}\n\ntestUserId<-test$USER_ID\ntrainUserId<-train$USER_ID\nimputeTestNew<-subset(imputeNew,imputeNew$USER_ID==testUserId)\n\n\nfor(i in 1:NROW(testUserId))\n{\n  imputeTestNew[i,]<-imputeNew[imputeNew$USER_ID==testUserId[i],]\n}\n\nimputeTrainNew<-subset(imputeNew,imputeNew$USER_ID==trainUserId)\n\nfor(i in 1:NROW(trainUserId))\n{\n  imputeTrainNew[i,]<-imputeNew[imputeNew$USER_ID==trainUserId[i],]\n}\n\ntrainComp<-read.csv(\"train2016.csv\",na.strings = c(\"\",\"NA\"))\n\ntrainComp <- subset(trainComp, trainComp$YOB <= 2003) \nimputeTrainNew$Party<-trainComp$Party\n\n#cart on imputed data for 6 variables only\n\nlibrary(rpart)\nlibrary(rpart.plot)\n\nlibrary(caTools)\nset.seed(1000)\nspl <- sample.split(imputeTrainNew$Party, SplitRatio = 0.7)\nPartyTrain <- subset(imputeTrainNew, spl == TRUE)\nPartyTest <- subset(imputeTrainNew, spl == FALSE)\n\nCARTmodel1 = rpart(Party ~ .-USER_ID , data=PartyTrain)\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(641+340)/nrow(PartyTest) #0.645\n\nset.seed(3000)\nlibrary(randomForest)\nRF_model = randomForest(Party ~ .-USER_ID , data=PartyTrain,nodesize=200,ntree=1000)\nPredict1 <- predict(RF_model, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(659+325)/nrow(PartyTest) \nimputeCompleteCopy<-impute\n\nlibrary(caret)\nlibrary(e1071)\n#decide the number of folds\nnumFolds<-trainControl(method = \"cv\",number = 10)\ncpGrid<-expand.grid(.cp=seq(0.01,0.5,0.01))\ntrain( Party ~ .-USER_ID, data= PartyTrain,method=\"rpart\", trControl= numFolds,tuneGrid=cpGrid)\nCARTmodel1 = rpart(Party ~.-USER_ID, data=PartyTrain,method = \"class\")\nprp(CARTmodel1)\nsummary(CARTmodel1)\nPredict1 <- predict(CARTmodel1, newdata = PartyTest, type=\"class\")\ntable(PartyTest$Party, Predict1)\n(641+340)/nrow(PartyTest) #0.645\n\nPredictCART <- predict(CARTmodel1, newdata = imputeTestNew, type=\"class\")\ntable(PredictCART)\nMySubmission = data.frame(USER_ID = test$USER_ID, Predictions = PredictCART)\nwrite.csv(MySubmission, \"SubmissionCARTDemographicImputation.csv\", row.names=FALSE)\n#0.61 3rd submission\n\n#####################################################################################\n\n\n\n\n\n\n\n\n\n\n\n\n",
    "created" : 1465382696847.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "1401805621",
    "id" : "70A92145",
    "lastKnownWriteTime" : 1465552054,
    "path" : "~/Documents/KaggleAnalytisEdge/Kaggle2.R",
    "project_path" : "Kaggle2.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}